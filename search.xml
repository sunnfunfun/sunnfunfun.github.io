<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux学习笔记（一）</title>
      <link href="/2024/07/27/linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2024/07/27/linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><a name="wcMNa"></a></p><h1 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h1><p><a name="nFo0T"></a></p><h2 id="各硬件设备在linux中的文件名"><a href="#各硬件设备在linux中的文件名" class="headerlink" title="各硬件设备在linux中的文件名"></a>各硬件设备在linux中的文件名</h2><p>因为在linux中一切皆文件，所以在linxu中，每个设备都是一个文件。比如说：SATA接口的硬盘在linux中的文件名为&#x2F;dev&#x2F;sd[a-d]。并且几乎所有的设备都会在&#x2F;dev目录下面。<br />下面是常用设备的文件名：</p><table><thead><tr><th>硬盘</th><th>&#x2F;dev&#x2F;sd[a-p]</th></tr></thead><tbody><tr><td>usb闪存盘</td><td>&#x2F;dev&#x2F;sd[a-p]（与硬盘相同）</td></tr><tr><td>鼠标</td><td>&#x2F;dev&#x2F;input&#x2F;mouse[0-15] （通用） <br />&#x2F;dev&#x2F;psaux （PS&#x2F;2界面） <br />&#x2F;dev&#x2F;mouse （当前鼠标）</td></tr></tbody></table><p><a name="QGb4y"></a></p><h2 id="安装linux时，磁盘分区的选择（重要）"><a href="#安装linux时，磁盘分区的选择（重要）" class="headerlink" title="安装linux时，磁盘分区的选择（重要）"></a>安装linux时，磁盘分区的选择（重要）</h2><p><a name="vPtcl"></a></p><h3 id="目录树结构"><a href="#目录树结构" class="headerlink" title="目录树结构"></a>目录树结构</h3><p>上面提到在linux中所有数据都是以文件的形式存在的，所以可以说在linux中，最重要的就是目录树结构，所谓的目录树结构，就是以根目录为主，向下以分支扩散。<br /><img src="https://picbed.aniyablog.cn/img/linux1.png" alt="image.png"><br />在上面的图中，我们要找mydata文件夹，就得从根目录下开始找，最终的路径为&#x2F;home&#x2F;dmtsai&#x2F;mydata。<br />我们现在知道了linux的整个文件系统是目录树的结构，但是我们的数据是存储在磁盘中的，所以我们现在要考虑的是，怎么把linux的目录树和磁盘联系起来，答案就是挂载（mount）。<br><a name="Cxg1Q"></a></p><h3 id="文件系统与目录树的关系（挂载）"><a href="#文件系统与目录树的关系（挂载）" class="headerlink" title="文件系统与目录树的关系（挂载）"></a>文件系统与目录树的关系（挂载）</h3><p>所谓的挂载，就是把一个目录当成点，然后把一个磁盘分区的数据放置在该目录下，当我们进入该目录时，就可以读取这个磁盘分区的数据。这个动作我们称为挂载，这个进入点我们成为挂载点。因为在linux中最重要的就是根目录，所以根目录肯定是要挂载到一个分区中的，然后其他的分区我们可以根据自己的需要来挂载。<br /><img src="https://picbed.aniyablog.cn/img/linux2.png" alt="image.png"><br />上图中，partition1挂载到根目录上，而partiton2挂载到了&#x2F;home上，所以我们往&#x2F;home中塞数据，实际上数据是存储在了partition2分区中。<br><a name="fH5pX"></a></p><h3 id="发行版安装时，磁盘分区与目录树的规划"><a href="#发行版安装时，磁盘分区与目录树的规划" class="headerlink" title="发行版安装时，磁盘分区与目录树的规划"></a>发行版安装时，磁盘分区与目录树的规划</h3><p>既然我们在Linux系统下使用的是目录树系统，所以安装的时候自然就得要规划磁盘分区与目录树的挂载 <br />了。 了解了上面的知识，我们就可以自定义我们的linux发行版安装。<br><a name="B0Nyf"></a></p><h4 id="菜鸟模式"><a href="#菜鸟模式" class="headerlink" title="菜鸟模式"></a>菜鸟模式</h4><p>第一次接触linux，只要分区“&#x2F;”和swap就可以。简单来说就是把最大的分区挂载到“&#x2F;”中，这样不会出现因为分区不合理而导致linux无法安装的问题，比如&#x2F;usr是linux的可执行程序和相关文件存放的目录，需求量还是很大的，如果因为挂载到&#x2F;usr上的分区容量太小而导致linux安装失败，那就太sb了。<br><a name="sZx0d"></a></p><h4 id="默认模式"><a href="#默认模式" class="headerlink" title="默认模式"></a>默认模式</h4><p>使用linux发行版提供的默认分区方式，如果你安装linux只是为了体验体验的话，那无所谓啦，随便你怎么分区。<br><a name="Qhl6l"></a></p><h1 id="安装linux前的规划"><a href="#安装linux前的规划" class="headerlink" title="安装linux前的规划"></a>安装linux前的规划</h1><p><a name="bz2l3"></a></p><h2 id="选择合适的linux发行版"><a href="#选择合适的linux发行版" class="headerlink" title="选择合适的linux发行版"></a>选择合适的linux发行版</h2><p>linux有很多发行版,详细信息可以上网搜索,我这里选择的是ubuntu24.04,原因是我比较熟悉ubuntu。<br />我这里使用虚拟机安装方式，实际上还可以安装windows和linux双系统。需要注意的是如果要安装双系统一定要先安装windows在安装linux。因为windows在安装时会覆盖linux的开机启动程序。<br><a name="FAXIN"></a></p><h2 id="linux当做服务器"><a href="#linux当做服务器" class="headerlink" title="linux当做服务器"></a>linux当做服务器</h2><p><strong>linux服务器有很多种类：</strong></p><ol><li>NAT（ip分享器）</li><li>SAMBA(网芳)</li><li>Mail（邮件服务器）</li><li>Web（Web服务器）</li><li>DHCP（提供用户端自动取得ip的功能）</li><li>FTP</li></ol><p><strong>linux的基本分区方式：</strong></p><ol><li>就像上面提到的，仅分出&#x2F;和swap</li><li>比较麻烦的方式就是先分析服务器的用途，根据用户区分出需要大容量的目录和读写频繁的目录，将这些目录独立出去，这样就算这些目录出了问题，也不影响&#x2F;目录。举个例子：比如邮件服务器，需要存储大量的邮件和附件，那么就可以把一个大容量的分区单独挂载到&#x2F;var目录。<br><a name="xaOQd"></a></li></ol><h2 id="虚拟机安装ubuntu24-04"><a href="#虚拟机安装ubuntu24-04" class="headerlink" title="虚拟机安装ubuntu24.04"></a>虚拟机安装ubuntu24.04</h2><p>我是真的懒<br /><a href="https://blog.csdn.net/m0_48160420/article/details/138428852">VMware Workstation虚拟机安装Ubuntu24.04_vmware安装ubuntu24.04-CSDN博客</a><br><a name="jT7w5"></a></p><h1 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h1><p>:::info</p><ol><li>在命令中加入可选设置时一般前面会带-，比如-h，有时候会带全名，这时前面就是–，比如–help。</li><li>指令、选项、参数这三个部分，linux用空格来区分，空几格无所谓。</li><li>指令太长的时候，可以用\enter来调到下一行。<br>:::<br><a name="ewcUn"></a></li></ol><h2 id="基础指令"><a href="#基础指令" class="headerlink" title="基础指令"></a>基础指令</h2><ul><li>查看日期和时间：date</li><li>查看日历：cal</li><li>简单好用的计算器：bc</li><li>求助指令<ul><li>–help</li><li>man page</li><li>info page</li></ul></li><li>开关机相关<ul><li>将数据同步写入硬盘：sync</li><li>关机指令：shutdown</li><li>重启：reboot</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/07/14/hello-world/"/>
      <url>/2024/07/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
